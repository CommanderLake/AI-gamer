<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{26389B05-D139-4C43-835F-EDFFDA696280}</ProjectGuid>
    <RootNamespace>AIgamer</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Intel C++ Compiler 19.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Intel C++ Compiler 19.0</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <InterproceduralOptimization>true</InterproceduralOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.2.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <FloatingPointModel>Fast</FloatingPointModel>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>_DEBUG;_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProgramFiles)\NVIDIA Corporation\NVIDIA Capture SDK\inc\;$(ProgramFiles)\NVIDIA Corporation\NVIDIA Capture SDK\samples\Util\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>nvapi64.lib;cudart_static.lib;cuda.lib;cudnn.lib;cublas.lib;curand.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)lib\;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\lib\x64;$(ProgramFiles)\NVIDIA Corporation\NVIDIA Capture SDK\lib\NvAPI\amd64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <CodeGeneration>compute_70,sm_70</CodeGeneration>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FloatingPointModel>Fast</FloatingPointModel>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <GenerateAlternateCodePaths>AVX2</GenerateAlternateCodePaths>
      <PreprocessorDefinitions>NDEBUG;_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProgramFiles)\NVIDIA Corporation\NVIDIA Capture SDK\inc\;$(ProgramFiles)\NVIDIA Corporation\NVIDIA Capture SDK\samples\Util\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>MaxSpeedHighLevel</Optimization>
      <RecognizeRestrictKeyword>true</RecognizeRestrictKeyword>
      <EnableAnsiAliasing>true</EnableAnsiAliasing>
      <OptimizationDiagnosticsFile>stdout</OptimizationDiagnosticsFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>nvapi64.lib;cudart_static.lib;cuda.lib;cudnn.lib;cublas.lib;curand.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>$(SolutionDir)lib\;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\lib\x64;$(ProgramFiles)\NVIDIA Corporation\NVIDIA Capture SDK\lib\NvAPI\amd64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <CodeGeneration>compute_70,sm_70</CodeGeneration>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Activate.h" />
    <ClInclude Include="BatchNorm.h" />
    <ClInclude Include="common.h" />
    <ClInclude Include="ConvLayer.h" />
    <ClInclude Include="Viewer.h" />
    <ClInclude Include="FCLayer.h" />
    <ClInclude Include="GetError.h" />
    <ClInclude Include="input_recorder.h" />
    <ClInclude Include="Layer.h" />
    <ClInclude Include="LayerNorm.h" />
    <ClInclude Include="LeakyReLU.h" />
    <ClInclude Include="NvDisplayCap.h" />
    <ClInclude Include="NvFBCLibrary.h" />
    <ClInclude Include="ScaleGrad.h" />
    <ClInclude Include="Sigmoid.h" />
    <ClInclude Include="ThreadPool.h" />
    <ClInclude Include="training.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Activate.cpp" />
    <ClCompile Include="BatchNorm.cpp" />
    <ClCompile Include="common.cpp" />
    <ClCompile Include="ConvLayer.cpp" />
    <ClCompile Include="Viewer.cpp" />
    <ClCompile Include="FCLayer.cpp" />
    <ClCompile Include="input_recorder.cpp" />
    <ClCompile Include="LayerNorm.cpp" />
    <ClCompile Include="LeakyReLU.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="ScaleGrad.cpp" />
    <ClCompile Include="Sigmoid.cpp" />
    <ClCompile Include="ThreadPool.cpp" />
    <ClCompile Include="training.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="CudaStuff.cu" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.2.targets" />
  </ImportGroup>
</Project>